{"version":3,"sources":["Components/AddTransactions.js","ReduxFiles/ActionCreators.js","Components/Balance.js","Components/Header.js","Components/IncomeExpense.js","Components/Transaction.js","Components/TransactionList.js","Components/Main.js","App.js","ReduxFiles/ActionReducer.js","Components/getLocalStorage.js","ReduxFiles/Store.js","index.js"],"names":["connect","dispatch","AddTransaction","transaction","type","element","addAction","useState","text","setText","amount","setAmount","className","onSubmit","e","preventDefault","newTransaction","id","Math","floor","random","parseInt","htmlFor","value","onChange","target","placeholder","required","state","Balance","transactions","useEffect","localStorage","setItem","JSON","stringify","console","log","Total","map","reduce","acc","item","toFixed","Header","amounts","incomeTotal","filter","expenseTotal","DeleteTransaction","deleteAction","sign","abs","onClick","Main","App","initialState","getItem","parse","ActionReducer","action","Store","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.90b8a74c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { addAction } from '../ReduxFiles/ActionCreators';\r\nimport { connect } from 'react-redux'\r\n\r\nconst AddTransactions = ({ AddTransaction }) => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random()* 100000000),\r\n            text,\r\n            amount: parseInt(amount)\r\n        }\r\n        AddTransaction(newTransaction)\r\n        \r\n        setText('');\r\n        setAmount(0);\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='addTransactions'>\r\n            <h3>Add AddTransactions</h3>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange = {(e) => setText(e.target.value)} \r\n                    placeholder=\"Enter text...\" required/>\r\n                </div>\r\n\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">\r\n                        Amount <br /> \r\n                    </label>\r\n                    <input type=\"number\" value={amount} onChange = {(e) => setAmount(e.target.value)} \r\n                    placeholder=\"Enter amount...\"  required/>\r\n                </div>\r\n\r\n                <button className=\"btn\">Add transaction</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        AddTransaction: (transaction) => dispatch(addAction(transaction))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTransactions)\r\n","export const addAction = (transaction) => {\r\n    return{\r\n        type:'ADD',\r\n        element: transaction\r\n    }\r\n}\r\n\r\nexport const deleteAction = (id) => {\r\n    return{\r\n        type:'DELETE',\r\n        element: id\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Balance = ({ Balance }) => {\r\n    useEffect(() => {\r\n        return localStorage.setItem('transactions', JSON.stringify(Balance))\r\n    }, [Balance])\r\n\r\n    console.log(Balance)\r\n    const Amount = Balance.map(value => value.amount)\r\n    const Total = Amount.reduce((acc,item) => (acc += item),0).toFixed(2)\r\n\r\n    return(\r\n        <div className='balance'>\r\n            <div>\r\n                <h4>Your Balance</h4>\r\n                <h1>${Total}</h1>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        Balance: state.transactions\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Balance)","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <h2>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst IncomeExpense = ({ transactions }) => {\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const incomeTotal = amounts.filter(item => item > 0).reduce((acc,item) => (acc += item),0).toFixed(2)\r\n\r\n    const expenseTotal = (amounts.filter(item => item < 0).reduce((acc,item) => (acc += item),0)* -1).toFixed(2)\r\n    \r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${incomeTotal}</p>\r\n            </div>\r\n\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">${expenseTotal}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        transactions: state.transactions    \r\n    }\r\n}\r\nexport default connect(mapStateToProps)(IncomeExpense)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteAction } from '../ReduxFiles/ActionCreators'\r\n\r\nconst Transaction = ({ DeleteTransaction, transaction }) => {\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <div>\r\n             <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n                {transaction.text} \r\n                \r\n                <span>{sign}${Math.abs(transaction.amount)}</span>\r\n\r\n                <button onClick={() => DeleteTransaction(transaction.id)} \r\n                className=\"delete-btn\">x</button>\r\n\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        DeleteTransaction: (id) => dispatch(deleteAction(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Transaction)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionList = ({ transactions }) => {\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className='list'>\r\n                {transactions.map((transaction) => (\r\n                     <Transaction key = {transaction.id} transaction = \r\n                     { transaction }  />\r\n                 ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        transactions: state.transactions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TransactionList)\r\n","import React from 'react'\r\nimport Balance from './Balance'\r\nimport Header from './Header'\r\nimport IncomeExpense from './IncomeExpense'\r\nimport TransactionList from './TransactionList'\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Balance/>\r\n            <IncomeExpense/>\r\n            <TransactionList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\nimport './App.css';\nimport AddTransactions from './Components/AddTransactions';\nimport Main from './Components/Main';\n\n\nfunction App() {\n  return (\n      <div className=\"container\">\n        <Main/>\n        <AddTransactions />\n      </div>\n  );\n}\n\nexport default App;\n","import { getLocalStorage } from \"../Components/getLocalStorage\"\r\n\r\n\r\nconst initialState = {\r\n    transactions: getLocalStorage()\r\n}\r\n\r\nconst ActionReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADD':\r\n            return{\r\n                ...state,\r\n                transactions: [...state.transactions, action.element]\r\n            }\r\n        case 'DELETE':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.element)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default ActionReducer","export const getLocalStorage = () => {\r\n    let transactions = localStorage.getItem('transactions')\r\n    if(transactions){\r\n        return JSON.parse(localStorage.getItem('transactions'))\r\n    }\r\n    else{\r\n        return []\r\n    }\r\n}","import { createStore } from \"redux\";\r\nimport ActionReducer from \"./ActionReducer\";\r\n\r\nconst Store = createStore(ActionReducer)\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport Store from './ReduxFiles/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}